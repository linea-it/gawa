
README for GAWA VERSION2 - 12/04/2022

GAWA content :

- call script :  gawa_main.py 
- config file : gawa.cfg 
- lib/ : gawa.py  utils.py  multithread.py 
- aux/ : auxiliary files 
       	 + isochrone masks 
	 + mag-magerr files for each survey/filters considered 
- input_data/ : example of input starcat + footprint 
- output_ref/ : example of output with verbose=1


Launch gawa in one line : 
> python gawa_main.py gawa.cfg
 default configuration to allow the generation of a 
 folder output/ to be compared to output_ref/


Requirements :
- Python 3.6
- installation of SPARSE2D / mr_filter C++ code 


Paralelization : 
- The natural multithreading comes in line 119 of gawa_main.py
  The loop on the threads can be replaced 
  Note that the number of threads can be updated in the config 
  file :  'admin / nthread_max'


Scientific use of GAWA: 
- The user should define a survey / 2 filters / 1 color 

   survey: 'MOCK_DES'  # DES
   ref_bfilter: 'filter_g'
   ref_rfilter: 'filter_r'
   ref_color: 'gr'

- Installation of a new survey : 
  in gawa.cfg under starcat: 
                and footprint: 
                and isochrone_masks:
     duplicate the description of a given survey and
     make yours.    
  

- GAWA detection parameters 
  + gawa_cfg / detection_mode => galaxy OR cluster
  + gawa_cfg / dslices => define the set of distances 
    to perform detection. 
    Warning : the code should be updated once the 
    CMD masks are properly set and strategy defined
  
- current Isochrone
The mask used by gawa was taken from an isochrone with 
13.5 and [Fe/H]=-2. The mask compensates the variability 
in metalicity with a bias in magnitude (metal-rich clusters 
tend to be seen as  more distant clusters). Regardig the 
variability age, only stars in the MSTO tend to occupy 
different positions in CMD.



What is new in GAWA VERSION2 :
- the tiling is done in healpix pixels so that 
  it can operate at any RA-Dec
- the divisision of the N tiles in P cores is 
  done to optimize the distribution of the area 
  to be analyzed (as equal area as possible). 
- SNR has a new definition => decreases Nr false positives
- cylinders are stored 
- identification of clusters in cylinders is performed
- method for filtering of possible duplicates has improved 
  in the tiles and between the tiles. 
- several steps of the codes were rewritten to decrease 
  CPU time. Some steps were improved by a factor > 10. 
- there are 3 levels of verbose. With verbose = 0 no intermediate 
  file is written on disc except those necessary for the code.
- there are several re-entry points with the generation of 
  numpy files (.npx). But this can be switched off if necessary


What should be improved / dev: 
- currently the code provides detections at discrete distances 
  corresponding to those provided by the gawa/compute_dslices function.
  We should add a fct to refine this first distance estimate. 
- Update the SPARSE2D package which is currently a C++ code => python 
  version to avoid current i/o's 
- BKG is computed in each tile. If a tile is too incomplete it may 
  lead to a poor estimate of the BKG => bad SNRs.   This has to be 
  checked. 
- Filtering based on 3 pass-bands (2 CMDs)



